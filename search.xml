<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>编写一个算法，对N*N矩阵，将其每行元素的平均值按递增顺序排列</title>
    <url>/2020/04/03/%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%97%E6%B3%95%EF%BC%8C%E5%AF%B9NN%E7%9F%A9%E9%98%B5%EF%BC%8C%E5%B0%86%E5%85%B6%E6%AF%8F%E8%A1%8C%E5%85%83%E7%B4%A0%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC%E6%8C%89%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%88%97/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Translation</span><span class="params">(<span class="keyword">float</span>**&amp; matrix, <span class="keyword">int</span> n)</span> </span>&#123;			<span class="comment">//本算法对n*n的矩阵matrix,通过行变换,使其各行元素的平均值按递增排列</span></span><br><span class="line">	<span class="keyword">int</span> k;</span><br><span class="line">	<span class="keyword">float</span> sum, min;						<span class="comment">//sun暂存各行元素之和</span></span><br><span class="line">	<span class="keyword">float</span>* p=<span class="keyword">new</span> <span class="keyword">float</span>[n], * pi, * pk;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		sum = <span class="number">0</span>;</span><br><span class="line">		pk = *matrix + i * n;				<span class="comment">//pk指向矩阵各行第1个元素</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			sum += *(pk);</span><br><span class="line">			pk++;</span><br><span class="line">		&#125;						<span class="comment">//求一行元素之和</span></span><br><span class="line">		p[i] = sum;					<span class="comment">//将一行元素之和存入一维数组</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)   </span><br><span class="line">	&#123;</span><br><span class="line">		min = p[i]; k = i;				<span class="comment">//初始设第i行元素之和最小. </span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (p[j] &lt; min)</span><br><span class="line">			&#123;</span><br><span class="line">				k = j;</span><br><span class="line">				min = p[j];</span><br><span class="line">			&#125;					<span class="comment">//记新的最小值及行号. </span></span><br><span class="line">			<span class="keyword">if</span> (i != k)				<span class="comment">//若最小行不是当前行,要进行交换(行元素及行元素之和)  </span></span><br><span class="line">			&#123;</span><br><span class="line">				pk = &amp;*matrix[k];		<span class="comment">//pk指向第k行第1个元素.   </span></span><br><span class="line">				pi = &amp;*matrix[i];		<span class="comment">//pi指向第i行第1个元素.   </span></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)	<span class="comment">//交换两行中对应元素.     </span></span><br><span class="line">				&#123;</span><br><span class="line">					sum = pk[j];</span><br><span class="line">					pk[j] = pi[j];</span><br><span class="line">					pi[j] = sum;</span><br><span class="line">				&#125;</span><br><span class="line">				sum = p[i];</span><br><span class="line">				p[i] = p[k];</span><br><span class="line">				p[k] = sum;			<span class="comment">//交换一维数组中元素之和</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> N;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">	<span class="keyword">float</span>** matrix;</span><br><span class="line">	matrix = <span class="keyword">new</span> <span class="keyword">float</span>* [N];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">		matrix[i] = <span class="keyword">new</span> <span class="keyword">float</span>[N];			<span class="comment">//N*N矩阵</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">float</span> m;</span><br><span class="line">			<span class="built_in">cin</span> &gt;&gt; m;</span><br><span class="line">			matrix[i][j] = m;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;							<span class="comment">//给N*N矩阵赋值</span></span><br><span class="line">	Translation(matrix, N);					<span class="comment">//将每行元素的平均值按递增顺序排列</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)	</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">			<span class="built_in">cout</span> &lt;&lt; matrix[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;	</span><br><span class="line">	&#125;							<span class="comment">//输出排序后的矩阵</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>题目</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>算法与数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>C++二维动态数组</title>
    <url>/2020/04/03/C-%E4%BA%8C%E7%BB%B4%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>原文链接：<a href="https://www.cnblogs.com/renfanzi/p/9144734.html" target="_blank" rel="noopener">https://www.cnblogs.com/renfanzi/p/9144734.html</a></p>
<hr>
<h4 id="已知动态数组的第一维"><a href="#已知动态数组的第一维" class="headerlink" title="已知动态数组的第一维"></a>已知动态数组的第一维</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span>* a[M];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">	a[i] = <span class="keyword">new</span> <span class="keyword">char</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">	<span class="keyword">delete</span>[] a[i];</span><br></pre></td></tr></table></figure>

<h4 id="已知动态数组的第二维"><a href="#已知动态数组的第二维" class="headerlink" title="已知动态数组的第二维"></a>已知动态数组的第二维</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span>(*a)[N];</span><br><span class="line">a = <span class="keyword">new</span> <span class="keyword">char</span>[m][N];</span><br><span class="line"><span class="keyword">delete</span>[] a;</span><br></pre></td></tr></table></figure>

<h4 id="两维都未知"><a href="#两维都未知" class="headerlink" title="两维都未知"></a>两维都未知</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span>** a;</span><br><span class="line">a = <span class="keyword">new</span> <span class="keyword">char</span>* [m];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">	a[i] = <span class="keyword">new</span> <span class="keyword">char</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">	<span class="keyword">delete</span>[] a[i];</span><br><span class="line"><span class="keyword">delete</span>[] a;</span><br></pre></td></tr></table></figure>

<h4 id="已知第一维，-一次分配内存（保证内存连续性）"><a href="#已知第一维，-一次分配内存（保证内存连续性）" class="headerlink" title="已知第一维， 一次分配内存（保证内存连续性）"></a>已知第一维， 一次分配内存（保证内存连续性）</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span>* a[M];</span><br><span class="line">a[<span class="number">0</span>] = <span class="keyword">new</span> <span class="keyword">char</span>[M * n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; M; i++)</span><br><span class="line">	a[i]a[i - <span class="number">1</span>] + n;</span><br><span class="line"><span class="keyword">delete</span>[] a[<span class="number">0</span>];</span><br></pre></td></tr></table></figure>

<h4 id="两维都未知，-一次分配内存（保证内存的连续性）"><a href="#两维都未知，-一次分配内存（保证内存的连续性）" class="headerlink" title="两维都未知， 一次分配内存（保证内存的连续性）"></a>两维都未知， 一次分配内存（保证内存的连续性）</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">har** a;</span><br><span class="line">a = <span class="keyword">new</span> <span class="keyword">char</span>* [m];</span><br><span class="line">a[<span class="number">0</span>] = <span class="keyword">new</span> <span class="keyword">char</span>[m * n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++)</span><br><span class="line">	a[i] = a[i - <span class="number">1</span>] + n;</span><br><span class="line"><span class="keyword">delete</span>[] a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">delete</span>[] a;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub + Hexo搭建个人博客之速度优化</title>
    <url>/2020/03/20/GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>前面已经介绍了如何搭建博客、美化主题以及编写博客，但是发现博客加载速度比较慢，下面介绍一种让网站速度更快的方法。</p>
<p>原文链接：<a href="https://blog.csdn.net/wkzd2016/article/details/70213330" target="_blank" rel="noopener">https://blog.csdn.net/wkzd2016/article/details/70213330</a></p>
<hr>
<p>上次用hexo和github上搭建博客后，用了几天发现博客搭建在github上有一定的局限：</p>
<ol>
<li>github服务器在国外，可能访问量太大，国内访问速度有些慢;</li>
<li>github屏蔽百度爬取，不利于seo;<br>所以，打算在<a href="https://coding.net/" target="_blank" rel="noopener">coding</a>上也搭建同样的hexo，然后通过解析让国内用户访问coding上的博客，国外用户访问github上的博客（貌似没什么国外的用户会看 ❥(^_-)）。</li>
</ol>
<h3 id="什么是coding？"><a href="#什么是coding？" class="headerlink" title="什么是coding？"></a>什么是coding？</h3><p>简单的说coding就是类似于github的开源代码仓库，几乎是完全仿照github做的；虽然现在代码量并不多，但是部分地方还是比github方便一些的：</p>
<ol>
<li>中文界面，对我们来用起来更加方便；</li>
<li>可以免费创建私有仓库；</li>
<li>虽然服务器也在国外，但是访问速度比github要快不少</li>
</ol>
<h3 id="注册coding并创建项目"><a href="#注册coding并创建项目" class="headerlink" title="注册coding并创建项目"></a>注册coding并创建项目</h3><p>这一部分很简单，不多说。需要注意的是创建项目的时候项目名称跟我们在github上创建时候类似，项目名一定要是：用户名 + coding.me<br>这样写的原因是此类pages服务中大都可以通过 {user_name}.域名 的项目名来访问此主页，(有兴趣请看coding的文档用户 Pages 与项目 Pages )<br><img src="https://img-blog.csdn.net/20170417144930611?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<h3 id="开启pages服务"><a href="#开启pages服务" class="headerlink" title="开启pages服务"></a>开启pages服务</h3><p>进入刚创建好的项目，点pages服务，选择来源处选择master分支，<br><img src="https://img-blog.csdn.net/20170417152117134?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<p>点击保存后，提示coding已运行在jiaosl.coding.me，说明开启成功，如下图:<br><img src="https://img-blog.csdn.net/20170417152433839?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<h3 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h3><p>此部分跟github上配置SSH Key完全相同，进入项目，设置，部署公钥，将你电脑上的公钥粘贴上就行。不懂的看上一篇文章。</p>
<h3 id="hexo中添加coding仓库"><a href="#hexo中添加coding仓库" class="headerlink" title="hexo中添加coding仓库"></a>hexo中添加coding仓库</h3><p>打开本地的hexo项目根目录下的_config.yml 配置文件，找到deploy，将coding中的项目地址填入进去。<br>我们之前的repository是这样的<br><img src="https://img-blog.csdn.net/20170417150844137?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<p>现在要同时发布到hithub和coding上，所以repository的值，就要改成键值对的形式列出来。如下图：<br><img src="https://img-blog.csdn.net/20170417150610087?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>要注意：.yml文件格式非常严格，冒号后面必须要有空格。</p>
<h3 id="部署hexo到coding和github上"><a href="#部署hexo到coding和github上" class="headerlink" title="部署hexo到coding和github上"></a>部署hexo到coding和github上</h3><p>在git bash中执行命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>现在我们每次执行部署命令，代码会同时提交到github和coding上。现在打开coding已经可以看到我们部署的hexo项目了,然后访问我们刚才开启的pages服务的域名jiaosl.coding.me,就可以看到我们的博客已经可以在coding上访问了。<br>后面的内容依然是为需要使用自己的域名访问博客的用户写的，如果不需要自己的域名请略过。</p>
<h3 id="解析域名到coding"><a href="#解析域名到coding" class="headerlink" title="解析域名到coding"></a>解析域名到coding</h3><h5 id="将github的解析改成海外"><a href="#将github的解析改成海外" class="headerlink" title="将github的解析改成海外"></a>将github的解析改成海外</h5><p>进入我的阿里云控制台，上次添加的解析是这样的<br><img src="https://img-blog.csdn.net/20170414152851840?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>现在我们需要修改这个解析，点击 修改，然后将解析线路改成海外，然后保存，这样国外的用户访问你的博客的话会跳转到你的github的页面。</p>
<h5 id="添加CNAME解析到coding"><a href="#添加CNAME解析到coding" class="headerlink" title="添加CNAME解析到coding"></a>添加CNAME解析到coding</h5><p>然后，点添加解析，我们再添加一条到coding的解析，记录类型选CNAME，记录值填你刚才pages服务给的地址，如：jiaosl.coding.me ，点击保存，如下图红色框框；<br><img src="https://img-blog.csdn.net/20170417153831882?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>这样算是解析到了coding，接下来我们需要在coding的pages服务里，绑定我们的域名，解析才会有效果，进入项目的pages服务中，找到在绑定域名那里，填入你的域名，点击绑定，出现下图这样，就说明绑定成功。<br><img src="https://img-blog.csdn.net/20170417154113550?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br>现在访问你的域名，就可以看到你的博客了。</p>
<p>最后我分别ping了两个网站的服务器，可以看出访问coding上的博客相对访问github还是要快一些的<br><img src="https://img-blog.csdn.net/20170417154954460?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2t6ZDIwMTY=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<hr>
<p>原文链接：<a href="https://blog.csdn.net/wkzd2016/article/details/70213330" target="_blank" rel="noopener">https://blog.csdn.net/wkzd2016/article/details/70213330</a></p>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub + Hexo搭建个人博客之写博客</title>
    <url>/2020/03/20/GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%86%99%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>前面已经介绍了博客的搭建以及主题美化，下面将介绍如何新建、编辑以及发布博客。</p>
<hr>
<h3 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h3><p>右键点击之前新建的文件夹（blog）选择 <strong>Git Bash Here</strong> ，输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n &#39;你新建的博客名（标题）&#39;</span><br></pre></td></tr></table></figure>
<p>或者你直接在 <u>前面新建的新建的文件夹\source_posts</u> 路径下新建一个<code>.md</code>格式的文件，将文件名改成你的博客标题，上面一种方法新建的博客也在这个文件下。</p>
<h3 id="编辑博客"><a href="#编辑博客" class="headerlink" title="编辑博客"></a>编辑博客</h3><h5 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h5><p><code>.md</code>格式的文件可以直接用记事本打开并编辑，但是发布之前不能方便地看到渲染后的效果，因此用markdown专用的编辑器更好，可以参考<a href="https://blog.csdn.net/davidhzq/article/details/100815332" target="_blank" rel="noopener">几款主流好用的markdown编辑器介绍</a>，但是如果你不太想下载软件，这里也有markdown在线编辑器推荐：<a href="http://mahua.jser.me/" target="_blank" rel="noopener">MaHua</a> 和 <a href="https://www.mdeditor.com/" target="_blank" rel="noopener">MdEditor</a>。<br>上面介绍的编辑器都是可以一边编辑一边预览效果的，以<strong>MdEditor</strong>为例：<br><img src="https://s1.ax1x.com/2020/03/20/8gfIbt.md.png" alt="效果"><br>我在用的是 vscode，安装 Markdown Preview Enhanced 插件也能实现一边编辑一边预览，可以根据个人喜好选择。</p>
<h5 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h5><p>Markdown的语法可以参考<a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">Markdown 教程</a>，比较简单。</p>
<h3 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h3><p>依然是打开Git Bash，输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>出现如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO start processing</span><br><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;localhost:4000 . press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>打开 <u><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></u> 即可在本地查看你的博客，在Git Bash里按 <kbd>Ctrl</kbd> + <kbd>C</kbd> 即可结束。<br>再输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>得到 <code>INFO Deploy done: git</code>即上传成功，可以在你的博客网页看到你上传的博客了。</p>
<p>如果不需要在本地查看，直接输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
<p>即可上传。</p>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub + Hexo搭建个人博客之主题美化</title>
    <url>/2020/03/17/GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<p>上一篇已经介绍了如何利用GitHub + Hexo搭建个人博客，如果不太喜欢博客默认的主题，我们可以更换自己喜欢的主题。Hexo提供了许多主题可供选择，这里选择主题<strong>A-Ayer</strong>作为示例，这也是此博客使用的主题。更换主题的具体步骤如下：<br>主题网站：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a><br>下载地址：<a href="https://github.com/Shen-Yu/hexo-theme-ayer" target="_blank" rel="noopener">https://github.com/Shen-Yu/hexo-theme-ayer</a><br>主题预览：<a href="https://shen-yu.gitee.io/" target="_blank" rel="noopener">https://shen-yu.gitee.io/</a></p>
<hr>
<h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>在命令行里输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;注意下载地址后面的themes&#x2F;ayer不要忘写了，这是主题的存放目录，后面还需要用到</span><br><span class="line">git clone 所选主题的下载地址 themes&#x2F;ayer    </span><br><span class="line">&#x2F;&#x2F;这里是：</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Shen-Yu&#x2F;hexo-theme-ayer.git themes&#x2F;ayer</span><br></pre></td></tr></table></figure>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><h5 id="修改根目录下的配置文件"><a href="#修改根目录下的配置文件" class="headerlink" title="修改根目录下的配置文件"></a>修改根目录下的配置文件</h5><p>在之前新建的博客文件夹根目录下找到配置文件<code>_config.yml</code>，打开后找到<code># Extensions</code>这一项，将 <u>theme</u> 的值改为 <u>Ayer</u></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">ayer</span></span><br></pre></td></tr></table></figure>
<h5 id="修改主题目录下的配置文件"><a href="#修改主题目录下的配置文件" class="headerlink" title="修改主题目录下的配置文件"></a>修改主题目录下的配置文件</h5><p>在博客文件夹中找到刚刚下载的主题的目录Ayer，在<u>你的博客文件夹名称\themes\ayer</u>路径下，里面也有一个配置文件<code>_config.yml</code>，修改如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 侧边栏菜单</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">目录:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags</span></span><br><span class="line">  <span class="string">旅行:</span> <span class="string">/tags/旅行/</span></span><br><span class="line">  <span class="string">摄影:</span> <span class="string">http://shenyu-vip.lofter.com</span></span><br><span class="line">  <span class="string">关于我:</span> <span class="string">/about</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 站点次标题和打字动效</span></span><br><span class="line"><span class="comment"># https://github.com/mattboldt/typed.js</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否开启动效</span></span><br><span class="line">  <span class="attr">text:</span> <span class="comment">#自定义文字      # 显示的文字</span></span><br><span class="line">  <span class="attr">text2:</span> <span class="comment">#自定义文字     # 滚动播放，如果不需要可以留空</span></span><br><span class="line">  <span class="attr">text3:</span> <span class="comment">#自定义文字     # 最多支持三段文字</span></span><br><span class="line">  <span class="attr">startDelay:</span> <span class="number">0</span>   <span class="comment"># 延迟时间</span></span><br><span class="line">  <span class="attr">typeSpeed:</span> <span class="number">200</span>  <span class="comment"># 打字速度</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span>  <span class="comment"># 是否循环</span></span><br><span class="line">  <span class="attr">backSpeed:</span> <span class="number">100</span>  <span class="comment"># 回退速度</span></span><br><span class="line">  <span class="attr">showCursor:</span> <span class="literal">true</span>  <span class="comment"># 是否显示光标</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站图标和侧边栏logo</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span><br><span class="line"><span class="attr">logo:</span> <span class="string">/images/ayer-side.svg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 封面配置</span></span><br><span class="line"><span class="comment"># enable-是否启用封面；path-封面背景图；logo-封面logo</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/images/cover5.jpg</span>  <span class="comment"># images目录下附送多张美图，可更换</span></span><br><span class="line">  <span class="attr">logo:</span> <span class="literal">false</span> <span class="comment">#/images/ayer.svg    # 如果不要直接设置成false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 页面顶部进度条  </span></span><br><span class="line"><span class="attr">progressBar:</span> <span class="string">ture</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网易云音乐插件</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 播放器尺寸类型(1：小尺寸、2：大尺寸)</span></span><br><span class="line">  <span class="attr">type:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">22707008</span>  <span class="comment"># 网易云分享的音乐ID(更换音乐请更改此配置项)</span></span><br><span class="line">  <span class="attr">autoPlay:</span> <span class="literal">true</span>  <span class="comment"># 是否开启自动播放</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章配置</span></span><br><span class="line"><span class="comment"># 文章太长，截断按钮文字(在需要截断的行增加此标记：&lt;!--more--&gt;)</span></span><br><span class="line"><span class="attr">excerpt_link:</span> <span class="string">阅读更多...</span></span><br><span class="line"><span class="comment"># 如果你嫌每篇文章手动加more标记比较麻烦，又不想在首页全文显示，可以把excerpt_all设置成true，这样首页只会显示文章归档</span></span><br><span class="line"><span class="attr">excerpt_all:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启文章分享按钮</span></span><br><span class="line"><span class="attr">share_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 国内的社交平台(If you are not in China, maybe you prefer to set:false)</span></span><br><span class="line"><span class="attr">share_china:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 文章分享文字</span></span><br><span class="line"><span class="attr">share_text:</span> <span class="string">分享</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页文字</span></span><br><span class="line"><span class="attr">nav_text:</span></span><br><span class="line">  <span class="attr">page_prev:</span> <span class="string">上一页</span></span><br><span class="line">  <span class="attr">page_next:</span> <span class="string">下一页</span></span><br><span class="line">  <span class="attr">post_prev:</span> <span class="string">上一篇</span></span><br><span class="line">  <span class="attr">post_next:</span> <span class="string">下一篇</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章页是否显示目录</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章中的图片是否支持点击放大</span></span><br><span class="line"><span class="attr">image_viewer:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="comment"># 是否开启字数统计(关闭请设置enable为false)</span></span><br><span class="line"><span class="comment"># 也可以单独在md文件里Front-matter设置`no_word_count: true`属性，来自定义关闭字数统计</span></span><br><span class="line"><span class="attr">word_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 只在文章详情显示(不在首页显示)</span></span><br><span class="line">  <span class="attr">only_article_visit:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打赏</span></span><br><span class="line"><span class="comment"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span></span><br><span class="line"><span class="attr">reward_type:</span> <span class="number">2</span></span><br><span class="line"><span class="comment"># 打赏wording</span></span><br><span class="line"><span class="attr">reward_wording:</span> <span class="string">'请我喝杯咖啡吧~'</span></span><br><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置logo的方式一样。比如：/images/alipay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line"><span class="attr">weixin:</span> <span class="string">/images/wechat.jpg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 版权声明</span></span><br><span class="line"><span class="comment"># 版权声明type设定：0-关闭版权声明； 1-文章对应的md文件里有copyright: true属性，才有版权声明； 2-所有文章均有版权声明</span></span><br><span class="line"><span class="attr">copyright_type:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否启用搜索</span></span><br><span class="line"><span class="comment"># 需要安装hexo-generator-searchdb(https://github.com/theme-next/hexo-generator-searchdb)</span></span><br><span class="line"><span class="attr">search:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># RSS订阅(先安装hexo-generator-feed插件，再去博客根目录config进行配置)</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 评论：1、Valine(推荐)；2、Gitalk</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、Valine[一款快速、简洁且高效的无后端评论系统](https://github.com/xCss/Valine)</span></span><br><span class="line"><span class="comment"># 启用Valine必须先创建leancloud应用， 获取 id|key 填入即可</span></span><br><span class="line"><span class="attr">leancloud:</span>  </span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment">#</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="comment">#</span></span><br><span class="line"><span class="comment"># Valine配置</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否启用</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># 是否启用防垃圾验证</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># 是否开启邮件提醒(https://valine.js.org/notify.html)</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mp</span> <span class="comment"># 头像样式(https://valine.js.org/avatar.html)</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">给我的文章加点评论吧~</span> <span class="comment"># placeholder</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、Gitalk(https://github.com/gitalk/gitalk)</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment"># true</span></span><br><span class="line">  <span class="attr">clientID:</span> <span class="comment"># GitHub Application Client ID</span></span><br><span class="line">  <span class="attr">clientSecret:</span> <span class="comment"># Client Secret</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="comment"># Repository name</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="comment"># GitHub ID</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="comment"># GitHub ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># GitHub Ribbons-封面右上角的forkme</span></span><br><span class="line"><span class="attr">github:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># (关闭请设置为false)</span></span><br><span class="line">  <span class="attr">url:</span> <span class="comment">#你的博客在Github中的仓库地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># fancybox(仅用于相册展示，若需要可配置albums)</span></span><br><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问量统计(不蒜子)</span></span><br><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 友盟cnzz统计(url填js代码src链接)</span></span><br><span class="line"><span class="attr">cnzz:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="string">''</span></span><br><span class="line"><span class="comment"># 百度统计</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数学公式</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站成立年份(默认为 2019，若填入年份小于当前年份，则显示为 2018-2019 类似的格式)</span></span><br><span class="line"><span class="attr">since:</span> <span class="number">2020</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否显示页脚信息(建议保留，有助于本主题的推广)</span></span><br><span class="line"><span class="attr">pageFooter:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#ICP备案信息尾部显示</span></span><br><span class="line"><span class="attr">icp:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">'http://www.beian.miit.gov.cn/'</span> <span class="comment"># 备案链接</span></span><br><span class="line">  <span class="attr">text:</span> <span class="string">'浙ICP备88888888'</span> <span class="comment"># 备案信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Toc</span></span><br><span class="line">  <span class="attr">toc:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>上面的说明都比较详细，可根据个人喜好进行修改，也可直接按照默认设置，但是下面这些是要注意的：<br>1、启用搜索需要安装hexo-generator-searchdb：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>安装完成后再去博客根目录<code>_config.yml</code>中进行配置，在最后添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>
<p>2、启用RSS订阅需要安装hexo-generator-feed插件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<p>再去博客根目录<code>_config.myl</code>进行配置，在最后添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-generator-feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">' '</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure>
<p>3、如果启用打赏功能，要将收付款码改为自己的，图片存在 <u>\themes\ayer\source\images</u> 目录下；<br>4、如果启用友盟CNZZ统计功能，需要自己注册相应的账号，在url填入你的src链接。</p>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub + Hexo搭建个人博客</title>
    <url>/2020/03/08/GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>下面介绍如何利用GitHub + Hexo来搭建个人博客：</p>
<p>*以下环境为：Windows 10 64bits操作系统</p>
<hr>
<h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><h4 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h4><p>Github 官网：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a><br>注册流程比较简单，这里就不再赘述了</p>
<h4 id="安装git和node-js"><a href="#安装git和node-js" class="headerlink" title="安装git和node.js"></a>安装git和node.js</h4><p>git 官网下载地址：<a href="https://git-scm.com/download/" target="_blank" rel="noopener">https://git-scm.com/download/</a><br>git 安装可参考：<a href="https://www.jianshu.com/p/bebba0d8038e" target="_blank" rel="noopener">Git安装教程(详细)</a></p>
<p>node.js 官网下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>node.js 安装可参考：<a href="https://www.cnblogs.com/aizai846/p/11441693.html" target="_blank" rel="noopener">Node.js安装详细步骤教程(Windows版)</a></p>
<h4 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h4><p>首先需要新建一个文件夹，以后所写的博客都会被放在这个文件夹里，这里我就命名为 blog。如果是按照上面的教程安装的git，那么右键点击这个文件夹会有 <strong>Git Bash Here</strong> 这个选项，点击 <strong>Git Bash Here</strong> ，在弹出的 Git Bash 里输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>安装完成后可输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hexo -v</span><br></pre></td></tr></table></figure>
<p>若显示以下内容（Hexo版本等信息），则表示安装成功。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">···</span><br></pre></td></tr></table></figure>

<h3 id="Hexo-初始化及创建-GitHub-Page"><a href="#Hexo-初始化及创建-GitHub-Page" class="headerlink" title="Hexo 初始化及创建 GitHub Page"></a>Hexo 初始化及创建 GitHub Page</h3><h4 id="Hexo-初始化"><a href="#Hexo-初始化" class="headerlink" title="Hexo 初始化"></a>Hexo 初始化</h4><p>右键点击之前新建的文件夹（blog）选择 <strong>Git Bash Here</strong> ，输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>进行初始化，这时打开新建的文件夹，发现里面多了一些文件：<br>/themes 是与博客的主题有关的文件<br>/source/_posts 是你所写的博客，文件后缀都为<code>.md</code><br>/_config.yml 是博客的配置文件</p>
<p>在初始化后，/source/_posts 目录下会有一篇名为 Hello World 的样例博客，还是按照上述方法在自己新建的文件夹中打开 Git Bash 输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>出现如下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO start processing</span><br><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;localhost:4000 . press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<p>打开 <u><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></u> 即可查看你的博客，在Git Bash里按 <kbd>Ctrl</kbd> + <kbd>C</kbd> 即可结束。这里看到的博客是在本地，要让其他人都能看到，需要将其部署在 GitHub Page 上，下面先介绍 GitHub 的创建。</p>
<h4 id="创建-GitHub-Page"><a href="#创建-GitHub-Page" class="headerlink" title="创建 GitHub Page"></a>创建 GitHub Page</h4><p>登陆之前注册的GitHub账号，新建一个仓库(Repository)，仓库名(Repository name)以(假设用户名为user)<code>user.github.io</code>命名<br>这样得到的网址更短，方便记忆，当然如果后来要绑定域名（我没有绑定域名，这里就不具体介绍了）就无所谓了。</p>
<p>勾选 <strong>Initialize this repository with a README</strong> ，然后点击  <strong>Create Repository</strong> 新建仓库。</p>
<p>然后在你新建的仓库里点击 <strong>Settings</strong> ，下拉到 <strong>GitHub Pages</strong> ，你会看到你的网址，一般是 <code>https://user.github.io/</code>(user为你的用户名)</p>
<p>用浏览器打开这个网址，里面的内容是仓库中<code>README.md</code>文件里的。</p>
<h3 id="将博客部署到-GutHub-上"><a href="#将博客部署到-GutHub-上" class="headerlink" title="将博客部署到 GutHub 上"></a>将博客部署到 GutHub 上</h3><h4 id="获取-Github-对应的-Repository-的链接"><a href="#获取-Github-对应的-Repository-的链接" class="headerlink" title="获取 Github 对应的 Repository 的链接"></a>获取 Github 对应的 Repository 的链接</h4><p>这里有两种方式，一种是 https 协议，一种是使用SSH密钥，推荐使用后者。SSH的配置可参考:<a href="https://blog.csdn.net/u013778905/article/details/83501204" target="_blank" rel="noopener">GitHub如何配置SSH Key</a>。<br>git 使用 https 协议，每次 pull，push 都要输入密码，使用 git 协议，使用 ssh 秘钥，不用每次都输密码，安全性也更高。</p>
<p>登陆 Github，进入到新建的仓库，点击 <strong>Clone or download</strong>，根据所选方式复制相应的 url。</p>
<h4 id="修改博客的配置文件"><a href="#修改博客的配置文件" class="headerlink" title="修改博客的配置文件"></a>修改博客的配置文件</h4><p>打开博客的配置文件 <code>/你新建的文件夹/_config.yml</code></p>
<p>找到 <strong>#Deployment</strong>，填入以下内容；</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span>  </span><br><span class="line">	  <span class="attr">type:</span> <span class="string">git</span>  </span><br><span class="line">	  <span class="attr">repository:</span> <span class="string">你复制的url</span>  </span><br><span class="line">	  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>
<h4 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h4><p>按照前面的操作打开 Git Bash，输入 ：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>安装 hexo-deployer-git<br>输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>得到 <code>INFO Deploy done: git</code>即为部署成功</p>
<p>之前创建的仓库中的 <code>ReadMe.md</code> 会被博客的内容覆盖掉，打开你的网址<code>https://user.github.io/</code>(user为你的用户名)，即可看到之前你博客中的内容。</p>
<p>参考资料：<br><a href="https://www.cnblogs.com/setcreed/p/11631794.html#%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A" target="_blank" rel="noopener">https://www.cnblogs.com/setcreed/p/11631794.html#%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A</a></p>
<p><a href="https://ryanluoxu.github.io/2017/11/24/%E7%94%A8-Hexo-%E5%92%8C-GitHub-Pages-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">https://ryanluoxu.github.io/2017/11/24/%E7%94%A8-Hexo-%E5%92%8C-GitHub-Pages-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</a></p>
<p><a href="https://www.jianshu.com/p/7124c5fe0fa7#" target="_blank" rel="noopener">https://www.jianshu.com/p/7124c5fe0fa7#</a></p>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
</search>
